{"version":3,"sources":["scripts/main.js"],"names":["url","details","getPhones","link","Promise","resolve","reject","fetch","then","obj","json","res","setTimeout","Error","divFirstReceived","document","createElement","h3FirstReceived","innerText","li","append","ul1","getFirstReceivedDetails","phonesIdArr","promises","map","id","race","classList","add","body","divAllSuccess","h3AllSuccess","ul","getAllSuccessfulDetails","resultArr","li1","toUpperCase","name","allSettled","phones","phonesIDArr","phone","push","array"],"mappings":"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","file":"main.203c0887.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url\n  = `https://mate-academy.github.io/phone-catalogue-static/api/phones.json`;\nconst details\n  = `https://mate-academy.github.io/phone-catalogue-static/api/phones/`;\n\nfunction getPhones(link) {\n  return new Promise((resolve, reject) => {\n    fetch(link)\n      .then((obj) => obj.json())\n      .then((res) => {\n        resolve(res);\n      });\n\n    setTimeout(() => {\n      reject(new Error('timeOut'));\n    }, 5000);\n  });\n}\n\nconst divFirstReceived = document.createElement('div');\nconst h3FirstReceived = document.createElement('h3');\n\nh3FirstReceived.innerText = 'first Received';\n\nconst li = document.createElement('li');\n\ndivFirstReceived.append(li);\n\nconst ul1 = document.createElement('ul');\n\nul1.append(li);\ndivFirstReceived.append(ul1);\ndivFirstReceived.append(h3FirstReceived);\ndivFirstReceived.classList.add('first-received');\n\ndocument.body.append(divFirstReceived);\n\nfunction getFirstReceivedDetails(phonesIdArr) {\n  const promises = phonesIdArr.map((id) => fetch(`${details}${id}.json`));\n\n  return Promise.race(promises)\n    .then((res) => res.json())\n    .then((obj) => (li.innerText = obj.id));\n}\n\nconst divAllSuccess = document.createElement('div');\n\ndivAllSuccess.classList.add('all-successful');\n\nconst h3AllSuccess = document.createElement('h3');\n\nh3AllSuccess.innerText = 'All Successful';\n\nconst ul = document.createElement('ul');\n\ndivAllSuccess.append(ul);\ndivAllSuccess.append(h3AllSuccess);\n\nfunction getAllSuccessfulDetails(phonesIdArr) {\n  const resultArr = phonesIdArr.map((id) => {\n    return fetch(`${details}${id}.json`)\n      .then((obj) => obj.json())\n      .then((obj) => {\n        const li1 = document.createElement('li');\n\n        li1.innerText = `${obj.id.toUpperCase()} === ${obj.name.toUpperCase()}`;\n        ul.append(li1);\n      });\n  });\n\n  return Promise.allSettled(resultArr);\n}\n\nconst phones = getPhones(url);\n\nconst phonesIDArr = [];\n\nphones\n  .then((res) => {\n    for (const phone of res) {\n      phonesIDArr.push(phone.id);\n    }\n\n    return phonesIDArr;\n  })\n  .then((array) => {\n    getFirstReceivedDetails(array);\n\n    getAllSuccessfulDetails(array).then(() =>\n      document.body.append(divAllSuccess)\n    );\n  });\n"]}